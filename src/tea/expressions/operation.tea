scopes     = require('../scopes')
Identifier = require('../identifier')
Keyword    = require('../keyword')
Condition  = require('./condition')

def Operation
  def init(operator, left, right)
    self.operator = operator
    self.left     = left
    self.right    = right
    return self
  end

  def compile
    case self.operator.trim()
    when '===', '!=='
      # comparing var OP nil?
      if self.isNil(self.left) and self.right instanceof Identifier and !scopes.isDefined(self.right.value)
        va = self.right.compile()
        return 'typeof ' + va + ' ' + self.operator + " 'undefined' || " + va + ' ' + self.operator + ' null'
      end

      # comparing nil OP var?
      if self.isNil(self.right) and self.left instanceof Identifier and !scopes.isDefined(self.left.value)
        va = self.left.compile()
        return 'typeof ' + va + ' ' + self.operator + " 'undefined' || " + va + ' ' + self.operator + ' null'
      end

      # comparing nil in conditional expression?
      if self.isNil(self.left) or self.isNil(self.right) or
          (self.left  instanceof Condition and self.isNil(self.left.condition)) or
          (self.right instanceof Condition and self.isNil(self.right.condition))
        self.operator = self.operator.substr(0, 2)
      end
    when '||='
      left = self.left.compile()
      return 'if (!' + left + ') ' + left + ' = ' + self.right.compile()
    when '='
      scopes.pushIdentifier(self.left.value) if self.left instanceof Identifier
    end
    return self.left.compile() + ' ' + self.operator + ' ' + self.right.compile()
  end

  def isNil(arg)
    return arg instanceof Keyword and arg.value == 'nil'
  end
end

module.exports = Operation
