object Tea.Prototype
  def init(name, parent, methods)
    self.objectName = name
    self.parentName = parent
    self.methods    = methods || []
    return self
  end

  def compile
    rs = []
    scopes.withScope(-> () {
      name = self.objectName.compile()

      if self.objectName instanceof Tea.Identifier
        scopes.pushIdentifier(self.objectName.value)
        rs.push('var ' + name + ' = function () {};')
      else
        rs.push(name + ' = function () {};')
      end

      if self.parentName
        rs.push(name + '.prototype = new ' + self.parentName.compile() + '();')
      end

      for fn of self.methods
        rs.push(fn.compile(objectName: name) + ';')
      end
    })
    return rs.join('')
  end
end
