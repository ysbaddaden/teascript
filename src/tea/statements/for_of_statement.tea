scopes     = require('../scopes')
Identifier = require('../identifier')

def ForOfStatement
  def init(identifier, index, expression, body)
    self.identifier = identifier
    self.index = index
    self.expression = expression
    self.body = body
    return self
  end

  def compile
    rs = []
    r1 = self.reference(rs)
    r2 = self.index ? self.index.compile() : scopes.reference()
    r3 = scopes.reference()

    scopes.pushIdentifier(self.identifier.value)
    scopes.pushIdentifier(self.index.value) if self.index

    rs.push('for (' + r2 + ' = 0, ' + r3 + ' = ' + r1 + '.length; ' + r2 + ' < ' + r3 + '; ' + r2 + '++) {')
    rs.push(self.identifier.compile() + ' = ' + r1 + '[' + r2 + '];')
    rs.push(self.body.compile())
    rs.push('}')
    return rs.join('')
  end

  def reference(rs)
    if self.expression instanceof Identifier
      r1 = self.expression.compile()
    else
      r1 = scopes.reference()
      rs.push(r1 + '=' + self.expression.compile() + ';')
    end
    return r1
  end
end

module.exports = ForOfStatement
