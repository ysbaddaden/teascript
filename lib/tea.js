/* Jison generated parser */
var tea = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"Program":3,"Body":4,"EOF":5,"Terminator":6,"Statement":7,"PrimaryExpression":8,"ConditionalStatement":9,"LoopStatement":10,"IF":11,"LF":12,"END":13,"ElseStatement":14,"ElsifStatement":15,"UNLESS":16,"ELSE":17,"ELSIF":18,"WHILE":19,"UNTIL":20,"LOOP":21,"Expression":22,"AssignExpression":23,"BREAK":24,"CONTINUE":25,"CONSTANT":26,"IDENTIFIER":27,"STRING_LITERAL":28,"STRING":29,"MathExpression":30,"BitwiseExpression":31,"LogicalExpression":32,"TYPEOF":33,"(":34,")":35,"=":36,"ADD_ASSIGN":37,"SUB_ASSIGN":38,"MUL_ASSIGN":39,"MOD_ASSIGN":40,"AND_ASSIGN":41,"OR_ASSIGN":42,"XOR_ASSIGN":43,"RIGHT_ASSIGN":44,"LEFT_ASSIGN":45,"+":46,"-":47,"*":48,"/":49,"%":50,"&":51,"|":52,"^":53,"EQ_OP":54,"NE_OP":55,"LT_OP":56,"LE_OP":57,"GT_OP":58,"GE_OP":59,"OR_OP":60,"AND_OP":61,"NOT_OP":62,";":63,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",11:"IF",12:"LF",13:"END",16:"UNLESS",17:"ELSE",18:"ELSIF",19:"WHILE",20:"UNTIL",21:"LOOP",24:"BREAK",25:"CONTINUE",26:"CONSTANT",27:"IDENTIFIER",28:"STRING_LITERAL",29:"STRING",33:"TYPEOF",34:"(",35:")",36:"=",37:"ADD_ASSIGN",38:"SUB_ASSIGN",39:"MUL_ASSIGN",40:"MOD_ASSIGN",41:"AND_ASSIGN",42:"OR_ASSIGN",43:"XOR_ASSIGN",44:"RIGHT_ASSIGN",45:"LEFT_ASSIGN",46:"+",47:"-",48:"*",49:"/",50:"%",51:"&",52:"|",53:"^",54:"EQ_OP",55:"NE_OP",56:"LT_OP",57:"LE_OP",58:"GT_OP",59:"GE_OP",60:"OR_OP",61:"AND_OP",62:"NOT_OP",63:";"},
productions_: [0,[3,2],[4,2],[4,3],[4,0],[7,1],[7,1],[7,1],[9,5],[9,6],[9,6],[9,7],[9,5],[9,3],[9,3],[14,3],[15,4],[15,5],[10,4],[10,4],[10,3],[10,3],[10,3],[8,1],[8,1],[8,1],[8,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,2],[22,3],[23,3],[23,3],[23,3],[23,3],[23,3],[23,3],[23,3],[23,3],[23,3],[23,3],[30,3],[30,3],[30,3],[30,3],[30,3],[31,3],[31,3],[31,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,3],[32,2],[6,1],[6,1]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1:
        this.$ = "(function() {\n";
        var identifiers = global.pullScope();
        if (identifiers.length) {
            this.$ += indentBody("var " + identifiers.join(", ") + ";\n");
        }
        this.$ += $$[$0-1];
        this.$ += "})();";
        console.log(this.$);
    
break;
case 3: this.$ = $$[$0-2] ? $$[$0-2] + $$[$0-1] : $$[$0-1]; 
break;
case 5: this.$ = indentBody($$[$0]) + ";\n"; 
break;
case 6: this.$ = "\n" + indentBody($$[$0]) + "\n"; 
break;
case 7: this.$ = "\n" + indentBody($$[$0]) + "\n"; 
break;
case 8:
        this.$ = "if (" + $$[$0-3] + ") {\n" + $$[$0-1] + indentBody("}");
    
break;
case 9:
        this.$ = "if (" + $$[$0-4] + ") {\n" + $$[$0-2] + indentBody("} ") + $$[$0-1];
    
break;
case 10:
        this.$ = "if (" + $$[$0-4] + ") {\n" + $$[$0-2] + indentBody("} ") + $$[$0-1];
    
break;
case 11:
        this.$ = "if (" + $$[$0-5] + ") {\n" + $$[$0-3] + indentBody("} ") + $$[$0-2] + " " + $$[$0-1];
    
break;
case 12:
        this.$ = "if (!(" + $$[$0-3] + ")) {\n" + $$[$0-1] + indentBody("}");
    
break;
case 13:
        pullIndent();
        this.$ = "if (" + $$[$0] + ") {\n" + indentBody($$[$0-2], 1) + ";\n" + indentBody("}");
    
break;
case 14:
        pullIndent();
        this.$ = "if (!(" + $$[$0] + ")) {\n" + indentBody($$[$0-2], 1) + ";\n" + indentBody("}");
    
break;
case 15: this.$ = "else {\n" + $$[$0] + indentBody("}"); 
break;
case 16:
        this.$ = "else if (" + $$[$0-2] + ") {\n" + $$[$0] + indentBody("}", -1);
    
break;
case 17:
        this.$ = "else if (" + $$[$0-3] + ") {\n" + $$[$0-1] + indentBody("} ", -1) + $$[$0];
    
break;
case 18:
        this.$ = "while (" + $$[$0-2] + ") {\n" + $$[$0-1] + indentBody("}");
    
break;
case 19:
        this.$ = "while (!(" + $$[$0-2] + ")) {\n" + $$[$0-1] + indentBody("}");
    
break;
case 20:
        pullIndent();
        this.$ = "while (" + $$[$0] + ") {\n" + indentBody($$[$0-2], 1) + ";\n" + indentBody("}");
    
break;
case 21:
        pullIndent();
        this.$ = "while (!(" + $$[$0] + ")) {\n" + indentBody($$[$0-2], 1) + ";\n" + indentBody("}");
    
break;
case 22:
        this.$ = "while (true) {\n" + $$[$0-1] + indentBody("}");
    
break;
case 23: this.$ = $$[$0]; 
break;
case 24: this.$ = $$[$0]; 
break;
case 25: this.$ = "break"; 
break;
case 26: this.$ = "continue"; 
break;
case 27: this.$ = $$[$0]; 
break;
case 28: this.$ = $$[$0]; 
break;
case 29: this.$ = $$[$0].replace(/\n/g, "\\\n"); 
break;
case 30: this.$ = $$[$0].replace(/\n/g, "\\\n"); 
break;
case 31: this.$ = $$[$0]; 
break;
case 32: this.$ = $$[$0]; 
break;
case 33: this.$ = $$[$0]; 
break;
case 34: this.$ = "typeof " + $$[$0]; 
break;
case 35: this.$ = "(" + $$[$0-1] + ")"; 
break;
case 36: this.$ = $$[$0-2] + " = "   + $$[$0]; 
break;
case 37: this.$ = $$[$0-2] + " += "  + $$[$0]; 
break;
case 38: this.$ = $$[$0-2] + " -= "  + $$[$0]; 
break;
case 39: this.$ = $$[$0-2] + " *= "  + $$[$0]; 
break;
case 40: this.$ = $$[$0-2] + " %= "  + $$[$0]; 
break;
case 41: this.$ = $$[$0-2] + " &= "  + $$[$0]; 
break;
case 42: this.$ = $$[$0-2] + " |= "  + $$[$0]; 
break;
case 43: this.$ = $$[$0-2] + " ^= "  + $$[$0]; 
break;
case 44: this.$ = $$[$0-2] + " >>= " + $$[$0]; 
break;
case 45: this.$ = $$[$0-2] + " <<= " + $$[$0]; 
break;
case 46: this.$ = $$[$0-2] + " + " + $$[$0]; 
break;
case 47: this.$ = $$[$0-2] + " - " + $$[$0]; 
break;
case 48: this.$ = $$[$0-2] + " * " + $$[$0]; 
break;
case 49: this.$ = $$[$0-2] + " / " + $$[$0]; 
break;
case 50: this.$ = $$[$0-2] + " % " + $$[$0]; 
break;
case 51: this.$ = $$[$0-2] + " & " + $$[$0]; 
break;
case 52: this.$ = $$[$0-2] + " | " + $$[$0]; 
break;
case 53: this.$ = $$[$0-2] + " ^ " + $$[$0]; 
break;
case 54: this.$ = $$[$0-2] + " === " + $$[$0]; 
break;
case 55: this.$ = $$[$0-2] + " !== " + $$[$0]; 
break;
case 56: this.$ = $$[$0-2] + " < "   + $$[$0]; 
break;
case 57: this.$ = $$[$0-2] + " <= "  + $$[$0]; 
break;
case 58: this.$ = $$[$0-2] + " > "   + $$[$0]; 
break;
case 59: this.$ = $$[$0-2] + " >= "  + $$[$0]; 
break;
case 60: this.$ = $$[$0-2] + " || "  + $$[$0]; 
break;
case 61: this.$ = $$[$0-2] + " && "  + $$[$0]; 
break;
case 62: this.$ = "!"  + $$[$0]; 
break;
}
},
table: [{3:1,4:2,5:[2,4],11:[2,4],12:[2,4],16:[2,4],19:[2,4],20:[2,4],21:[2,4],24:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],33:[2,4],34:[2,4],62:[2,4],63:[2,4]},{1:[3]},{5:[1,3],6:4,7:5,8:8,9:9,10:10,11:[1,15],12:[1,6],16:[1,16],19:[1,17],20:[1,18],21:[1,19],22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29],63:[1,7]},{1:[2,1]},{5:[2,2],11:[2,2],12:[2,2],13:[2,2],16:[2,2],17:[2,2],18:[2,2],19:[2,2],20:[2,2],21:[2,2],24:[2,2],25:[2,2],26:[2,2],27:[2,2],28:[2,2],29:[2,2],33:[2,2],34:[2,2],62:[2,2],63:[2,2]},{6:30,12:[1,6],63:[1,7]},{5:[2,63],11:[2,63],12:[2,63],13:[2,63],16:[2,63],17:[2,63],18:[2,63],19:[2,63],20:[2,63],21:[2,63],24:[2,63],25:[2,63],26:[2,63],27:[2,63],28:[2,63],29:[2,63],33:[2,63],34:[2,63],62:[2,63],63:[2,63]},{5:[2,64],11:[2,64],12:[2,64],13:[2,64],16:[2,64],17:[2,64],18:[2,64],19:[2,64],20:[2,64],21:[2,64],24:[2,64],25:[2,64],26:[2,64],27:[2,64],28:[2,64],29:[2,64],33:[2,64],34:[2,64],62:[2,64],63:[2,64]},{11:[1,31],12:[2,5],16:[1,32],19:[1,33],20:[1,34],63:[2,5]},{12:[2,6],63:[2,6]},{12:[2,7],63:[2,7]},{11:[2,23],12:[2,23],13:[2,23],16:[2,23],19:[2,23],20:[2,23],21:[2,23],24:[2,23],25:[2,23],26:[2,23],27:[2,23],28:[2,23],29:[2,23],33:[2,23],34:[2,23],46:[1,35],47:[1,36],48:[1,37],49:[1,38],50:[1,39],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,23],63:[2,23]},{11:[2,24],12:[2,24],13:[2,24],16:[2,24],19:[2,24],20:[2,24],21:[2,24],24:[2,24],25:[2,24],26:[2,24],27:[2,24],28:[2,24],29:[2,24],33:[2,24],34:[2,24],62:[2,24],63:[2,24]},{11:[2,25],12:[2,25],13:[2,25],16:[2,25],19:[2,25],20:[2,25],21:[2,25],24:[2,25],25:[2,25],26:[2,25],27:[2,25],28:[2,25],29:[2,25],33:[2,25],34:[2,25],62:[2,25],63:[2,25]},{11:[2,26],12:[2,26],13:[2,26],16:[2,26],19:[2,26],20:[2,26],21:[2,26],24:[2,26],25:[2,26],26:[2,26],27:[2,26],28:[2,26],29:[2,26],33:[2,26],34:[2,26],62:[2,26],63:[2,26]},{8:51,22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{8:52,22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{8:53,22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{8:54,22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{4:55,11:[2,4],12:[2,4],13:[2,4],16:[2,4],19:[2,4],20:[2,4],21:[2,4],24:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],33:[2,4],34:[2,4],62:[2,4],63:[2,4]},{11:[2,27],12:[2,27],13:[2,27],16:[2,27],19:[2,27],20:[2,27],21:[2,27],24:[2,27],25:[2,27],26:[2,27],27:[2,27],28:[2,27],29:[2,27],33:[2,27],34:[2,27],35:[2,27],46:[2,27],47:[2,27],48:[2,27],49:[2,27],50:[2,27],51:[2,27],52:[2,27],53:[2,27],54:[2,27],55:[2,27],56:[2,27],57:[2,27],58:[2,27],59:[2,27],60:[2,27],61:[2,27],62:[2,27],63:[2,27]},{11:[2,28],12:[2,28],13:[2,28],16:[2,28],19:[2,28],20:[2,28],21:[2,28],24:[2,28],25:[2,28],26:[2,28],27:[2,28],28:[2,28],29:[2,28],33:[2,28],34:[2,28],36:[1,56],37:[1,57],38:[1,58],39:[1,59],40:[1,60],41:[1,61],42:[1,62],43:[1,63],44:[1,64],45:[1,65],46:[2,28],47:[2,28],48:[2,28],49:[2,28],50:[2,28],51:[2,28],52:[2,28],53:[2,28],54:[2,28],55:[2,28],56:[2,28],57:[2,28],58:[2,28],59:[2,28],60:[2,28],61:[2,28],62:[2,28],63:[2,28]},{11:[2,29],12:[2,29],13:[2,29],16:[2,29],19:[2,29],20:[2,29],21:[2,29],24:[2,29],25:[2,29],26:[2,29],27:[2,29],28:[2,29],29:[2,29],33:[2,29],34:[2,29],35:[2,29],46:[2,29],47:[2,29],48:[2,29],49:[2,29],50:[2,29],51:[2,29],52:[2,29],53:[2,29],54:[2,29],55:[2,29],56:[2,29],57:[2,29],58:[2,29],59:[2,29],60:[2,29],61:[2,29],62:[2,29],63:[2,29]},{11:[2,30],12:[2,30],13:[2,30],16:[2,30],19:[2,30],20:[2,30],21:[2,30],24:[2,30],25:[2,30],26:[2,30],27:[2,30],28:[2,30],29:[2,30],33:[2,30],34:[2,30],35:[2,30],46:[2,30],47:[2,30],48:[2,30],49:[2,30],50:[2,30],51:[2,30],52:[2,30],53:[2,30],54:[2,30],55:[2,30],56:[2,30],57:[2,30],58:[2,30],59:[2,30],60:[2,30],61:[2,30],62:[2,30],63:[2,30]},{11:[2,31],12:[2,31],13:[2,31],16:[2,31],19:[2,31],20:[2,31],21:[2,31],24:[2,31],25:[2,31],26:[2,31],27:[2,31],28:[2,31],29:[2,31],33:[2,31],34:[2,31],35:[2,31],46:[2,31],47:[2,31],48:[2,31],49:[2,31],50:[2,31],51:[2,31],52:[2,31],53:[2,31],54:[2,31],55:[2,31],56:[2,31],57:[2,31],58:[2,31],59:[2,31],60:[2,31],61:[2,31],62:[2,31],63:[2,31]},{11:[2,32],12:[2,32],13:[2,32],16:[2,32],19:[2,32],20:[2,32],21:[2,32],24:[2,32],25:[2,32],26:[2,32],27:[2,32],28:[2,32],29:[2,32],33:[2,32],34:[2,32],35:[2,32],46:[2,32],47:[2,32],48:[2,32],49:[2,32],50:[2,32],51:[2,32],52:[2,32],53:[2,32],54:[2,32],55:[2,32],56:[2,32],57:[2,32],58:[2,32],59:[2,32],60:[2,32],61:[2,32],62:[2,32],63:[2,32]},{11:[2,33],12:[2,33],13:[2,33],16:[2,33],19:[2,33],20:[2,33],21:[2,33],24:[2,33],25:[2,33],26:[2,33],27:[2,33],28:[2,33],29:[2,33],33:[2,33],34:[2,33],35:[2,33],46:[2,33],47:[2,33],48:[2,33],49:[2,33],50:[2,33],51:[2,33],52:[2,33],53:[2,33],54:[2,33],55:[2,33],56:[2,33],57:[2,33],58:[2,33],59:[2,33],60:[2,33],61:[2,33],62:[2,33],63:[2,33]},{22:66,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:68,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:69,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{5:[2,3],11:[2,3],12:[2,3],13:[2,3],16:[2,3],17:[2,3],18:[2,3],19:[2,3],20:[2,3],21:[2,3],24:[2,3],25:[2,3],26:[2,3],27:[2,3],28:[2,3],29:[2,3],33:[2,3],34:[2,3],62:[2,3],63:[2,3]},{8:70,22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{8:71,22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{8:72,22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{8:73,22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:74,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:75,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:76,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:77,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:78,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:79,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:80,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:81,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:82,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:83,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:84,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:85,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:86,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:87,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:88,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:89,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{12:[1,90]},{12:[1,91]},{4:92,11:[2,4],12:[2,4],13:[2,4],16:[2,4],19:[2,4],20:[2,4],21:[2,4],24:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],33:[2,4],34:[2,4],62:[2,4],63:[2,4]},{4:93,11:[2,4],12:[2,4],13:[2,4],16:[2,4],19:[2,4],20:[2,4],21:[2,4],24:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],33:[2,4],34:[2,4],62:[2,4],63:[2,4]},{6:4,7:5,8:8,9:9,10:10,11:[1,15],12:[1,6],13:[1,94],16:[1,16],19:[1,17],20:[1,18],21:[1,19],22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29],63:[1,7]},{22:95,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:96,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:97,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:98,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:99,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:100,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:101,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:102,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:103,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{22:104,26:[1,20],27:[1,67],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{11:[2,34],12:[2,34],13:[2,34],16:[2,34],19:[2,34],20:[2,34],21:[2,34],24:[2,34],25:[2,34],26:[2,34],27:[2,34],28:[2,34],29:[2,34],33:[2,34],34:[2,34],35:[2,34],46:[2,34],47:[2,34],48:[2,34],49:[2,34],50:[2,34],51:[2,34],52:[2,34],53:[2,34],54:[2,34],55:[2,34],56:[2,34],57:[2,34],58:[2,34],59:[2,34],60:[2,34],61:[2,34],62:[2,34],63:[2,34]},{11:[2,28],12:[2,28],13:[2,28],16:[2,28],19:[2,28],20:[2,28],21:[2,28],24:[2,28],25:[2,28],26:[2,28],27:[2,28],28:[2,28],29:[2,28],33:[2,28],34:[2,28],35:[2,28],46:[2,28],47:[2,28],48:[2,28],49:[2,28],50:[2,28],51:[2,28],52:[2,28],53:[2,28],54:[2,28],55:[2,28],56:[2,28],57:[2,28],58:[2,28],59:[2,28],60:[2,28],61:[2,28],62:[2,28],63:[2,28]},{35:[1,105],46:[1,35],47:[1,36],48:[1,37],49:[1,38],50:[1,39],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50]},{11:[2,62],12:[2,62],13:[2,62],16:[2,62],19:[2,62],20:[2,62],21:[2,62],24:[2,62],25:[2,62],26:[2,62],27:[2,62],28:[2,62],29:[2,62],33:[2,62],34:[2,62],35:[2,62],46:[2,62],47:[2,62],48:[2,62],49:[2,62],50:[2,62],51:[2,62],52:[2,62],53:[2,62],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,62],63:[2,62]},{12:[2,13],63:[2,13]},{12:[2,14],63:[2,14]},{12:[2,20],63:[2,20]},{12:[2,21],63:[2,21]},{11:[2,46],12:[2,46],13:[2,46],16:[2,46],19:[2,46],20:[2,46],21:[2,46],24:[2,46],25:[2,46],26:[2,46],27:[2,46],28:[2,46],29:[2,46],33:[2,46],34:[2,46],35:[2,46],46:[2,46],47:[2,46],48:[2,46],49:[2,46],50:[2,46],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,46],63:[2,46]},{11:[2,47],12:[2,47],13:[2,47],16:[2,47],19:[2,47],20:[2,47],21:[2,47],24:[2,47],25:[2,47],26:[2,47],27:[2,47],28:[2,47],29:[2,47],33:[2,47],34:[2,47],35:[2,47],46:[2,47],47:[2,47],48:[2,47],49:[2,47],50:[2,47],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,47],63:[2,47]},{11:[2,48],12:[2,48],13:[2,48],16:[2,48],19:[2,48],20:[2,48],21:[2,48],24:[2,48],25:[2,48],26:[2,48],27:[2,48],28:[2,48],29:[2,48],33:[2,48],34:[2,48],35:[2,48],46:[2,48],47:[2,48],48:[2,48],49:[2,48],50:[2,48],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,48],63:[2,48]},{11:[2,49],12:[2,49],13:[2,49],16:[2,49],19:[2,49],20:[2,49],21:[2,49],24:[2,49],25:[2,49],26:[2,49],27:[2,49],28:[2,49],29:[2,49],33:[2,49],34:[2,49],35:[2,49],46:[2,49],47:[2,49],48:[2,49],49:[2,49],50:[2,49],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,49],63:[2,49]},{11:[2,50],12:[2,50],13:[2,50],16:[2,50],19:[2,50],20:[2,50],21:[2,50],24:[2,50],25:[2,50],26:[2,50],27:[2,50],28:[2,50],29:[2,50],33:[2,50],34:[2,50],35:[2,50],46:[2,50],47:[2,50],48:[2,50],49:[2,50],50:[2,50],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,50],63:[2,50]},{11:[2,51],12:[2,51],13:[2,51],16:[2,51],19:[2,51],20:[2,51],21:[2,51],24:[2,51],25:[2,51],26:[2,51],27:[2,51],28:[2,51],29:[2,51],33:[2,51],34:[2,51],35:[2,51],46:[2,51],47:[2,51],48:[2,51],49:[2,51],50:[2,51],51:[2,51],52:[2,51],53:[2,51],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,51],63:[2,51]},{11:[2,52],12:[2,52],13:[2,52],16:[2,52],19:[2,52],20:[2,52],21:[2,52],24:[2,52],25:[2,52],26:[2,52],27:[2,52],28:[2,52],29:[2,52],33:[2,52],34:[2,52],35:[2,52],46:[2,52],47:[2,52],48:[2,52],49:[2,52],50:[2,52],51:[2,52],52:[2,52],53:[2,52],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,52],63:[2,52]},{11:[2,53],12:[2,53],13:[2,53],16:[2,53],19:[2,53],20:[2,53],21:[2,53],24:[2,53],25:[2,53],26:[2,53],27:[2,53],28:[2,53],29:[2,53],33:[2,53],34:[2,53],35:[2,53],46:[2,53],47:[2,53],48:[2,53],49:[2,53],50:[2,53],51:[2,53],52:[2,53],53:[2,53],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,53],63:[2,53]},{11:[2,54],12:[2,54],13:[2,54],16:[2,54],19:[2,54],20:[2,54],21:[2,54],24:[2,54],25:[2,54],26:[2,54],27:[2,54],28:[2,54],29:[2,54],33:[2,54],34:[2,54],35:[2,54],46:[2,54],47:[2,54],48:[2,54],49:[2,54],50:[2,54],51:[2,54],52:[2,54],53:[2,54],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,54],63:[2,54]},{11:[2,55],12:[2,55],13:[2,55],16:[2,55],19:[2,55],20:[2,55],21:[2,55],24:[2,55],25:[2,55],26:[2,55],27:[2,55],28:[2,55],29:[2,55],33:[2,55],34:[2,55],35:[2,55],46:[2,55],47:[2,55],48:[2,55],49:[2,55],50:[2,55],51:[2,55],52:[2,55],53:[2,55],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,55],63:[2,55]},{11:[2,56],12:[2,56],13:[2,56],16:[2,56],19:[2,56],20:[2,56],21:[2,56],24:[2,56],25:[2,56],26:[2,56],27:[2,56],28:[2,56],29:[2,56],33:[2,56],34:[2,56],35:[2,56],46:[2,56],47:[2,56],48:[2,56],49:[2,56],50:[2,56],51:[2,56],52:[2,56],53:[2,56],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,56],63:[2,56]},{11:[2,57],12:[2,57],13:[2,57],16:[2,57],19:[2,57],20:[2,57],21:[2,57],24:[2,57],25:[2,57],26:[2,57],27:[2,57],28:[2,57],29:[2,57],33:[2,57],34:[2,57],35:[2,57],46:[2,57],47:[2,57],48:[2,57],49:[2,57],50:[2,57],51:[2,57],52:[2,57],53:[2,57],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,57],63:[2,57]},{11:[2,58],12:[2,58],13:[2,58],16:[2,58],19:[2,58],20:[2,58],21:[2,58],24:[2,58],25:[2,58],26:[2,58],27:[2,58],28:[2,58],29:[2,58],33:[2,58],34:[2,58],35:[2,58],46:[2,58],47:[2,58],48:[2,58],49:[2,58],50:[2,58],51:[2,58],52:[2,58],53:[2,58],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,58],63:[2,58]},{11:[2,59],12:[2,59],13:[2,59],16:[2,59],19:[2,59],20:[2,59],21:[2,59],24:[2,59],25:[2,59],26:[2,59],27:[2,59],28:[2,59],29:[2,59],33:[2,59],34:[2,59],35:[2,59],46:[2,59],47:[2,59],48:[2,59],49:[2,59],50:[2,59],51:[2,59],52:[2,59],53:[2,59],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,59],63:[2,59]},{11:[2,60],12:[2,60],13:[2,60],16:[2,60],19:[2,60],20:[2,60],21:[2,60],24:[2,60],25:[2,60],26:[2,60],27:[2,60],28:[2,60],29:[2,60],33:[2,60],34:[2,60],35:[2,60],46:[2,60],47:[2,60],48:[2,60],49:[2,60],50:[2,60],51:[2,60],52:[2,60],53:[2,60],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,60],63:[2,60]},{11:[2,61],12:[2,61],13:[2,61],16:[2,61],19:[2,61],20:[2,61],21:[2,61],24:[2,61],25:[2,61],26:[2,61],27:[2,61],28:[2,61],29:[2,61],33:[2,61],34:[2,61],35:[2,61],46:[2,61],47:[2,61],48:[2,61],49:[2,61],50:[2,61],51:[2,61],52:[2,61],53:[2,61],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,61],63:[2,61]},{4:106,11:[2,4],12:[2,4],13:[2,4],16:[2,4],17:[2,4],18:[2,4],19:[2,4],20:[2,4],21:[2,4],24:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],33:[2,4],34:[2,4],62:[2,4],63:[2,4]},{4:107,11:[2,4],12:[2,4],13:[2,4],16:[2,4],19:[2,4],20:[2,4],21:[2,4],24:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],33:[2,4],34:[2,4],62:[2,4],63:[2,4]},{6:4,7:5,8:8,9:9,10:10,11:[1,15],12:[1,6],13:[1,108],16:[1,16],19:[1,17],20:[1,18],21:[1,19],22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29],63:[1,7]},{6:4,7:5,8:8,9:9,10:10,11:[1,15],12:[1,6],13:[1,109],16:[1,16],19:[1,17],20:[1,18],21:[1,19],22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29],63:[1,7]},{12:[2,22],63:[2,22]},{11:[2,36],12:[2,36],13:[2,36],16:[2,36],19:[2,36],20:[2,36],21:[2,36],24:[2,36],25:[2,36],26:[2,36],27:[2,36],28:[2,36],29:[2,36],33:[2,36],34:[2,36],46:[1,35],47:[1,36],48:[1,37],49:[1,38],50:[1,39],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,36],63:[2,36]},{11:[2,37],12:[2,37],13:[2,37],16:[2,37],19:[2,37],20:[2,37],21:[2,37],24:[2,37],25:[2,37],26:[2,37],27:[2,37],28:[2,37],29:[2,37],33:[2,37],34:[2,37],46:[1,35],47:[1,36],48:[1,37],49:[1,38],50:[1,39],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,37],63:[2,37]},{11:[2,38],12:[2,38],13:[2,38],16:[2,38],19:[2,38],20:[2,38],21:[2,38],24:[2,38],25:[2,38],26:[2,38],27:[2,38],28:[2,38],29:[2,38],33:[2,38],34:[2,38],46:[1,35],47:[1,36],48:[1,37],49:[1,38],50:[1,39],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,38],63:[2,38]},{11:[2,39],12:[2,39],13:[2,39],16:[2,39],19:[2,39],20:[2,39],21:[2,39],24:[2,39],25:[2,39],26:[2,39],27:[2,39],28:[2,39],29:[2,39],33:[2,39],34:[2,39],46:[1,35],47:[1,36],48:[1,37],49:[1,38],50:[1,39],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,39],63:[2,39]},{11:[2,40],12:[2,40],13:[2,40],16:[2,40],19:[2,40],20:[2,40],21:[2,40],24:[2,40],25:[2,40],26:[2,40],27:[2,40],28:[2,40],29:[2,40],33:[2,40],34:[2,40],46:[1,35],47:[1,36],48:[1,37],49:[1,38],50:[1,39],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,40],63:[2,40]},{11:[2,41],12:[2,41],13:[2,41],16:[2,41],19:[2,41],20:[2,41],21:[2,41],24:[2,41],25:[2,41],26:[2,41],27:[2,41],28:[2,41],29:[2,41],33:[2,41],34:[2,41],46:[1,35],47:[1,36],48:[1,37],49:[1,38],50:[1,39],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,41],63:[2,41]},{11:[2,42],12:[2,42],13:[2,42],16:[2,42],19:[2,42],20:[2,42],21:[2,42],24:[2,42],25:[2,42],26:[2,42],27:[2,42],28:[2,42],29:[2,42],33:[2,42],34:[2,42],46:[1,35],47:[1,36],48:[1,37],49:[1,38],50:[1,39],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,42],63:[2,42]},{11:[2,43],12:[2,43],13:[2,43],16:[2,43],19:[2,43],20:[2,43],21:[2,43],24:[2,43],25:[2,43],26:[2,43],27:[2,43],28:[2,43],29:[2,43],33:[2,43],34:[2,43],46:[1,35],47:[1,36],48:[1,37],49:[1,38],50:[1,39],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,43],63:[2,43]},{11:[2,44],12:[2,44],13:[2,44],16:[2,44],19:[2,44],20:[2,44],21:[2,44],24:[2,44],25:[2,44],26:[2,44],27:[2,44],28:[2,44],29:[2,44],33:[2,44],34:[2,44],46:[1,35],47:[1,36],48:[1,37],49:[1,38],50:[1,39],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,44],63:[2,44]},{11:[2,45],12:[2,45],13:[2,45],16:[2,45],19:[2,45],20:[2,45],21:[2,45],24:[2,45],25:[2,45],26:[2,45],27:[2,45],28:[2,45],29:[2,45],33:[2,45],34:[2,45],46:[1,35],47:[1,36],48:[1,37],49:[1,38],50:[1,39],51:[1,40],52:[1,41],53:[1,42],54:[1,43],55:[1,44],56:[1,45],57:[1,46],58:[1,47],59:[1,48],60:[1,49],61:[1,50],62:[2,45],63:[2,45]},{11:[2,35],12:[2,35],13:[2,35],16:[2,35],19:[2,35],20:[2,35],21:[2,35],24:[2,35],25:[2,35],26:[2,35],27:[2,35],28:[2,35],29:[2,35],33:[2,35],34:[2,35],35:[2,35],46:[2,35],47:[2,35],48:[2,35],49:[2,35],50:[2,35],51:[2,35],52:[2,35],53:[2,35],54:[2,35],55:[2,35],56:[2,35],57:[2,35],58:[2,35],59:[2,35],60:[2,35],61:[2,35],62:[2,35],63:[2,35]},{6:4,7:5,8:8,9:9,10:10,11:[1,15],12:[1,6],13:[1,110],14:111,15:112,16:[1,16],17:[1,113],18:[1,114],19:[1,17],20:[1,18],21:[1,19],22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29],63:[1,7]},{6:4,7:5,8:8,9:9,10:10,11:[1,15],12:[1,6],13:[1,115],16:[1,16],19:[1,17],20:[1,18],21:[1,19],22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29],63:[1,7]},{12:[2,18],63:[2,18]},{12:[2,19],63:[2,19]},{12:[2,8],63:[2,8]},{13:[1,116]},{13:[1,117],14:118,17:[1,113]},{12:[1,119]},{8:120,22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29]},{12:[2,12],63:[2,12]},{12:[2,9],63:[2,9]},{12:[2,10],63:[2,10]},{13:[1,121]},{4:122,11:[2,4],12:[2,4],13:[2,4],16:[2,4],19:[2,4],20:[2,4],21:[2,4],24:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],33:[2,4],34:[2,4],62:[2,4],63:[2,4]},{12:[1,123]},{12:[2,11],63:[2,11]},{6:4,7:5,8:8,9:9,10:10,11:[1,15],12:[1,6],13:[2,15],16:[1,16],19:[1,17],20:[1,18],21:[1,19],22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29],63:[1,7]},{4:124,11:[2,4],12:[2,4],13:[2,4],16:[2,4],17:[2,4],18:[2,4],19:[2,4],20:[2,4],21:[2,4],24:[2,4],25:[2,4],26:[2,4],27:[2,4],28:[2,4],29:[2,4],33:[2,4],34:[2,4],62:[2,4],63:[2,4]},{6:4,7:5,8:8,9:9,10:10,11:[1,15],12:[1,6],13:[2,16],15:125,16:[1,16],17:[2,16],18:[1,114],19:[1,17],20:[1,18],21:[1,19],22:11,23:12,24:[1,13],25:[1,14],26:[1,20],27:[1,21],28:[1,22],29:[1,23],30:24,31:25,32:26,33:[1,27],34:[1,28],62:[1,29],63:[1,7]},{13:[2,17],17:[2,17]}],
defaultActions: {3:[2,1]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    if (typeof this.lexer.yylloc == 'undefined')
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    if (typeof this.yy.parseError === 'function')
        this.parseError = this.yy.parseError;

    function popStack (n) {
        stack.length = stack.length - 2*n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || 1; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    };

    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length-1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol == null)
                symbol = lex();
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {

            if (!recovering) {
                // Report error
                expected = [];
                for (p in table[state]) if (this.terminals_[p] && p > 2) {
                    expected.push("'"+this.terminals_[p]+"'");
                }
                var errStr = '';
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+'\nExpecting '+expected.join(', ');
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == 1 /*EOF*/ ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr,
                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol == EOF) {
                    throw new Error(errStr || 'Parsing halted.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            while (1) {
                // check for error recovery rule in this state
                if ((TERROR.toString()) in table[state]) {
                    break;
                }
                if (state == 0) {
                    throw new Error(errStr || 'Parsing halted.');
                }
                popStack(1);
                state = stack[stack.length-1];
            }

            preErrorSymbol = symbol; // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {

            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0)
                        recovering--;
                } else { // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2: // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3: // accept
                return true;
        }

    }

    return true;
}};/* Jison generated lexer */
var lexer = (function(){var lexer = ({EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parseError) {
            this.yy.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext+=ch;
        this.yyleng++;
        this.match+=ch;
        this.matched+=ch;
        var lines = ch.match(/\n/);
        if (lines) this.yylineno++;
        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        this._input = ch + this._input;
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            match = this._input.match(this.rules[rules[i]]);
            if (match) {
                lines = match[0].match(/\n.*/g);
                if (lines) this.yylineno += lines.length;
                this.yylloc = {first_line: this.yylloc.last_line,
                               last_line: this.yylineno+1,
                               first_column: this.yylloc.last_column,
                               last_column: lines ? lines[lines.length-1].length-1 : this.yylloc.last_column + match[0].length}
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                this._more = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, rules[i],this.conditionStack[this.conditionStack.length-1]);
                if (token) return token;
                else return;
            }
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(), 
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    }});
lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

    if (typeof pushScope == 'undefined') {
        Array.prototype.pull = function () {
            var index = scopes.length - 1,
                value = scopes[index];
            delete scopes[index];
            return value;
        }
        
        global.scopes = [[]];
        
        global.pushScope = function () {
            scopes.push([]);
        }
        global.pullScope = function () {
            return scopes.pull();
        }
        global.currentScope = function () {
            return scopes[scopes.length - 1];
        }
        global.pushIdentifier = function (identifier) {
            var scope = currentScope();
            if (scope.indexOf(identifier) == -1) {
                scope.push(identifier);
            }
        }
        
        global.indentValue = 1;
        
        global.indentBody = function (str, by) {
            var _indent = "";
            for (i = 0; i < indentValue + (by || 0); i++) {
                _indent += "  ";
            }
            return _indent + str;
        }
        global.pushIndent = function () {
            global.indentValue += 1;
        }
        global.pullIndent = function () {
            global.indentValue -= 1;
        }
    }

var YYSTATE=YY_START
switch($avoiding_name_collisions) {
case 0:; // skip comments
break;
case 1:return 26;
break;
case 2:return 26;
break;
case 3:return 26;
break;
case 4:return 26;
break;
case 5:return 26;
break;
case 6:return 28;
break;
case 7:return 29;
break;
case 8: pullIndent(); return 13; 
break;
case 9: pushIndent(); return 11; 
break;
case 10: pushIndent(); return 16; 
break;
case 11:return 17;
break;
case 12:return 18;
break;
case 13: pushIndent(); return 19; 
break;
case 14: pushIndent(); return 20; 
break;
case 15: pushIndent(); return 21; 
break;
case 16:return 24;
break;
case 17:return 25;
break;
case 18:return 25;
break;
case 19:return 37;
break;
case 20:return 38;
break;
case 21:return 39;
break;
case 22:return 40;
break;
case 23:return 41;
break;
case 24:return 42;
break;
case 25:return 43;
break;
case 26:return 'OR_OR_ASSIGN';
break;
case 27:return 44;
break;
case 28:return 45;
break;
case 29:return 33;
break;
case 30:return 62;
break;
case 31:return 62;
break;
case 32:return 61;
break;
case 33:return 61;
break;
case 34:return 60;
break;
case 35:return 60;
break;
case 36:return yy_.yytext;
break;
case 37:return 'RIGHT_OP';
break;
case 38:return 'LEFT_OP';
break;
case 39:return 'NEQ_OP';
break;
case 40:return 57;
break;
case 41:return 56;
break;
case 42:return 59;
break;
case 43:return 58;
break;
case 44:return 54;
break;
case 45:return yy_.yytext;
break;
case 46: pushIdentifier(yy_.yytext); return 27; 
break;
case 47:; // skip whitespace
break;
case 48:return 12;
break;
case 49:return 5;
break;
case 50:throw 'Invalid character: "' + yy_.yytext + '"';
break;
}
};
lexer.rules = [/^#.*/,/^true\b/,/^false\b/,/^null\b/,/^[-+~]?[0-9]+(\.[0-9]+)?([eE][-+]?[0-9]+)?/,/^[-+~]?\.[0-9]+([eE][-+]?[0-9]+)?/,/^"(\\.|[^\\"])*"/,/^'(\\.|[^\\'])*'/,/^end\b/,/^if\b/,/^unless\b/,/^else\b/,/^elsif\b/,/^while\b/,/^until\b/,/^loop\b/,/^break\b/,/^next\b/,/^continue\b/,/^\+=/,/^-=/,/^\*=/,/^%=/,/^&=/,/^\|=/,/^\^=/,/^(?=(?=\|\|=))/,/^>>=/,/^<<=/,/^typeof\b/,/^!/,/^not\b/,/^and\b/,/^&&/,/^or\b/,/^\|\|/,/^[-+*%/&|^]/,/^>>/,/^<</,/^!=/,/^<=/,/^</,/^>=/,/^>/,/^==/,/^[()=;]/,/^[a-zA-Z_]([a-zA-Z_]|[0-9])*/,/^[ \t]+/,/^\n+/,/^$/,/^./];
lexer.conditions = {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"inclusive":true}};return lexer;})()
parser.lexer = lexer;
return parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = tea;
exports.parse = function () { return tea.parse.apply(tea, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    if (typeof process !== 'undefined') {
        var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), "utf8");
    } else {
        var cwd = require("file").path(require("file").cwd());
        var source = cwd.join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
}